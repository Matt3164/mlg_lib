#AUTOGENERATED! DO NOT EDIT! File to edit: dev/04_image_processing.ipynb (unless otherwise specified).

__all__ = ['ImageFormat', 'load_img', 'save_img']

#Cell
from enum import Enum

class ImageFormat(Enum):
    OPENCV = "opencv"
    SKIMAGE = "skimage"
    NUMPY="numpy"

#Cell

from pathlib import Path
import numpy as np
import cv2
from skimage.io import imread

def load_img(path: Path, img_format: ImageFormat):
    if img_format==ImageFormat.OPENCV:
        return cv2.imread(str(path))
    elif img_format==ImageFormat.SKIMAGE:
        return imread(str(path))
    elif img_format==ImageFormat.NUMPY:
        return np.load(str(path))
    else:
        raise NotImplementedError


#Cell

from pathlib import Path
import numpy as np
import cv2
from skimage.io import imsave

def save_img(arr: np.ndarray, path: Path, img_format: ImageFormat):
    if img_format==ImageFormat.OPENCV:
        return cv2.imwrite(str(path), arr)
    elif img_format==ImageFormat.SKIMAGE:
        return imsave(str(path), arr)
    elif img_format==ImageFormat.NUMPY:
        return np.save(str(path), arr)
    else:
        raise NotImplementedError
